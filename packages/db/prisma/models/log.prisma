model Log {
    id        String    @id @default(cuid())
    type      LogType
    status    LogStatus @default(INFO)
    message   String
    metadata  Json?
    error     Json?
    ipAddress String?
    userAgent String?
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt

    user   User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId String?

    @@index([userId])
    @@index([type])
    @@index([status])
    @@index([createdAt])
    @@index([userId, type])
    @@index([userId, createdAt])
}

enum LogType {
    SIGN_IN
    SIGN_UP
    SIGN_OUT
    PASSWORD_RESET
    PASSWORD_CHANGE
    EMAIL_VERIFICATION
    ACCOUNT_LOCKED
    CLOCK_IN
    CLOCK_OUT
    BREAK_START
    BREAK_END
    SHIFT_START
    SHIFT_END
    ACCOUNT_CREATED
    ACCOUNT_UPDATED
    ACCOUNT_DELETED
    PROFILE_UPDATED
    PERMISSION_CHANGED
    FAILED_LOGIN_ATTEMPT
    SUSPICIOUS_ACTIVITY
    SESSION_EXPIRED
    TOKEN_REFRESH
    USER_CREATED_BY_ADMIN
    USER_DELETED_BY_ADMIN
    BULK_OPERATION
}

enum LogStatus {
    INFO
    SUCCESS
    WARNING
    ERROR
    DEBUG
}
